# Makefile.in generated by automake 1.13.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/sort-merge-joins
pkgincludedir = $(includedir)/sort-merge-joins
pkglibdir = $(libdir)/sort-merge-joins
pkglibexecdir = $(libexecdir)/sort-merge-joins
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
#am__append_1 = -lnuma
#am__append_2 = -DHAVE_NUMA
#am__append_3 = -DKEY_8B
#am__append_4 = -DPERF_COUNTERS
#am__append_5 = -lperf
#am__append_6 = -I$(top_srcdir)/lib/intel-pcm-2.35/ -L$(top_srcdir)/lib/intel-pcm-2.35/lib/
#am__append_7 = $(top_srcdir)/src/util/perf_counters.c $(top_srcdir)/src/util/perf_counters.h
#am__append_8 = -lperf
#am__append_9 = -DDEBUG
am__append_10 = -DNDEBUG
#am__append_11 = -DNO_TIMING
#am__append_12 = -DJOIN_MATERIALIZE
#am__append_13 = -DPERSIST_RELATIONS
am__append_14 = -DHAVE_AVX 
am__append_15 = -mavx $(DEFINES)
#am__append_16 = -msse4.2 $(DEFINES)
bin_PROGRAMS = sortmergejoins$(EXEEXT) bench_partitioning$(EXEEXT) \
	bench_merge$(EXEEXT) bench_multiwaymerge$(EXEEXT) \
	bench_sort$(EXEEXT) tputbench$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/lib/check-0.9.12/check.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__bench_merge_SOURCES_DIST = $(top_srcdir)/src/util/perf_counters.c \
	$(top_srcdir)/src/util/perf_counters.h \
	$(top_srcdir)/src/util/affinity.h \
	$(top_srcdir)/src/avxsort/avxsort_core.h \
	$(top_srcdir)/tests/testutil.h $(top_srcdir)/tests/testutil.c \
	$(top_srcdir)/src/bench/mergebench.c
#am__objects_1 =  \
#	bench_merge-perf_counters.$(OBJEXT)
am__objects_2 = $(am__objects_1)
am_bench_merge_OBJECTS = $(am__objects_2) \
	bench_merge-testutil.$(OBJEXT) \
	bench_merge-mergebench.$(OBJEXT)
bench_merge_OBJECTS = $(am_bench_merge_OBJECTS)
bench_merge_LDADD = $(LDADD)
bench_merge_LINK = $(CCLD) $(bench_merge_CFLAGS) $(CFLAGS) \
	$(bench_merge_LDFLAGS) $(LDFLAGS) -o $@
am__bench_multiwaymerge_SOURCES_DIST =  \
	$(top_srcdir)/src/util/perf_counters.c \
	$(top_srcdir)/src/util/perf_counters.h \
	$(top_srcdir)/src/util/affinity.h \
	$(top_srcdir)/src/merge/avx_multiwaymerge.h \
	$(top_srcdir)/src/merge/avx_multiwaymerge.c \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.h \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.c \
	$(top_srcdir)/tests/testutil.h $(top_srcdir)/tests/testutil.c \
	$(top_srcdir)/src/bench/multiwaymergebench.c
#am__objects_3 = bench_multiwaymerge-perf_counters.$(OBJEXT)
am__objects_4 = $(am__objects_3)
am_bench_multiwaymerge_OBJECTS = $(am__objects_4) \
	bench_multiwaymerge-avx_multiwaymerge.$(OBJEXT) \
	bench_multiwaymerge-scalar_multiwaymerge.$(OBJEXT) \
	bench_multiwaymerge-testutil.$(OBJEXT) \
	bench_multiwaymerge-multiwaymergebench.$(OBJEXT)
bench_multiwaymerge_OBJECTS = $(am_bench_multiwaymerge_OBJECTS)
bench_multiwaymerge_LDADD = $(LDADD)
bench_multiwaymerge_LINK = $(CCLD) $(bench_multiwaymerge_CFLAGS) \
	$(CFLAGS) $(bench_multiwaymerge_LDFLAGS) $(LDFLAGS) -o $@
am__bench_partitioning_SOURCES_DIST =  \
	$(top_srcdir)/src/util/perf_counters.c \
	$(top_srcdir)/src/util/perf_counters.h \
	$(top_srcdir)/src/types.h $(top_srcdir)/src/util/rdtsc.h \
	$(top_srcdir)/src/util/cpu_mapping.h \
	$(top_srcdir)/src/util/cpu_mapping.c \
	$(top_srcdir)/src/util/affinity.h \
	$(top_srcdir)/src/util/lock.h \
	$(top_srcdir)/src/util/memalloc.h \
	$(top_srcdir)/src/util/memalloc.c \
	$(top_srcdir)/src/util/barrier.h \
	$(top_srcdir)/src/datagen/genzipf.h \
	$(top_srcdir)/src/datagen/genzipf.c \
	$(top_srcdir)/src/datagen/generator.h \
	$(top_srcdir)/src/datagen/generator.c \
	$(top_srcdir)/src/partition/partition.h \
	$(top_srcdir)/src/partition/partition.c \
	$(top_srcdir)/src/bench/partitioningbench.c
#am__objects_5 = bench_partitioning-perf_counters.$(OBJEXT)
am__objects_6 = $(am__objects_5)
am_bench_partitioning_OBJECTS = $(am__objects_6) \
	bench_partitioning-cpu_mapping.$(OBJEXT) \
	bench_partitioning-memalloc.$(OBJEXT) \
	bench_partitioning-genzipf.$(OBJEXT) \
	bench_partitioning-generator.$(OBJEXT) \
	bench_partitioning-partition.$(OBJEXT) \
	bench_partitioning-partitioningbench.$(OBJEXT)
bench_partitioning_OBJECTS = $(am_bench_partitioning_OBJECTS)
bench_partitioning_LDADD = $(LDADD)
bench_partitioning_LINK = $(CCLD) $(bench_partitioning_CFLAGS) \
	$(CFLAGS) $(bench_partitioning_LDFLAGS) $(LDFLAGS) -o $@
am__bench_sort_SOURCES_DIST = $(top_srcdir)/src/util/perf_counters.c \
	$(top_srcdir)/src/util/perf_counters.h \
	$(top_srcdir)/src/util/affinity.h \
	$(top_srcdir)/src/util/cpu_mapping.h \
	$(top_srcdir)/src/util/cpu_mapping.c \
	$(top_srcdir)/tests/testutil.h $(top_srcdir)/tests/testutil.c \
	$(top_srcdir)/src/avxsort/avxcommon.h \
	$(top_srcdir)/src/avxsort/avxsort_core.h \
	$(top_srcdir)/src/avxsort/avxsort.h \
	$(top_srcdir)/src/avxsort/avxsort.c \
	$(top_srcdir)/src/merge/merge.h \
	$(top_srcdir)/src/merge/merge.c \
	$(top_srcdir)/src/merge/avx_multiwaymerge.h \
	$(top_srcdir)/src/merge/avx_multiwaymerge.c \
	$(top_srcdir)/src/avxsort/avxsort_multiway.h \
	$(top_srcdir)/src/avxsort/avxsort_multiway.c \
	$(top_srcdir)/src/datagen/genzipf.h \
	$(top_srcdir)/src/datagen/genzipf.c \
	$(top_srcdir)/src/datagen/generator.h \
	$(top_srcdir)/src/datagen/generator.c \
	$(top_srcdir)/src/bench/sortbench.c
#am__objects_7 =  \
#	bench_sort-perf_counters.$(OBJEXT)
am__objects_8 = $(am__objects_7)
am_bench_sort_OBJECTS = $(am__objects_8) \
	bench_sort-cpu_mapping.$(OBJEXT) bench_sort-testutil.$(OBJEXT) \
	bench_sort-avxsort.$(OBJEXT) bench_sort-merge.$(OBJEXT) \
	bench_sort-avx_multiwaymerge.$(OBJEXT) \
	bench_sort-avxsort_multiway.$(OBJEXT) \
	bench_sort-genzipf.$(OBJEXT) bench_sort-generator.$(OBJEXT) \
	bench_sort-sortbench.$(OBJEXT)
bench_sort_OBJECTS = $(am_bench_sort_OBJECTS)
bench_sort_LDADD = $(LDADD)
bench_sort_LINK = $(CCLD) $(bench_sort_CFLAGS) $(CFLAGS) \
	$(bench_sort_LDFLAGS) $(LDFLAGS) -o $@
am__sortmergejoins_SOURCES_DIST =  \
	$(top_srcdir)/src/util/perf_counters.c \
	$(top_srcdir)/src/util/perf_counters.h $(top_srcdir)/config.h \
	$(top_srcdir)/src/types.h $(top_srcdir)/src/util/affinity.h \
	$(top_srcdir)/src/util/cpu_mapping.h \
	$(top_srcdir)/src/util/cpu_mapping.c \
	$(top_srcdir)/src/util/numa_shuffle.h \
	$(top_srcdir)/src/util/numa_shuffle.c \
	$(top_srcdir)/src/util/memalloc.h \
	$(top_srcdir)/src/util/memalloc.c \
	$(top_srcdir)/src/util/barrier.h \
	$(top_srcdir)/src/util/rdtsc.h \
	$(top_srcdir)/src/avxsort/avxcommon.h \
	$(top_srcdir)/src/avxsort/avxsort_core.h \
	$(top_srcdir)/src/avxsort/avxsort.h \
	$(top_srcdir)/src/avxsort/avxsort.c \
	$(top_srcdir)/src/merge/merge.h \
	$(top_srcdir)/src/merge/merge.c \
	$(top_srcdir)/src/scalarsort/scalarsort.h \
	$(top_srcdir)/src/scalarsort/scalarsort.c \
	$(top_srcdir)/src/datagen/genzipf.h \
	$(top_srcdir)/src/datagen/genzipf.c \
	$(top_srcdir)/src/datagen/generator.h \
	$(top_srcdir)/src/datagen/generator.c \
	$(top_srcdir)/src/partition/partition.h \
	$(top_srcdir)/src/partition/partition.c \
	$(top_srcdir)/src/joins/joincommon.h \
	$(top_srcdir)/src/joins/joincommon.c \
	$(top_srcdir)/src/joins/sortmergejoin_multipass.h \
	$(top_srcdir)/src/joins/sortmergejoin_multipass.c \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.h \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.c \
	$(top_srcdir)/src/merge/avx_multiwaymerge.h \
	$(top_srcdir)/src/merge/avx_multiwaymerge.c \
	$(top_srcdir)/src/joins/sortmergejoin_multiway.h \
	$(top_srcdir)/src/joins/sortmergejoin_multiway.c \
	$(top_srcdir)/src/joins/sortmergejoin_mpsm.h \
	$(top_srcdir)/src/joins/sortmergejoin_mpsm.c \
	$(top_srcdir)/src/main.c
#am__objects_9 =  \
#	sortmergejoins-perf_counters.$(OBJEXT)
am__objects_10 = $(am__objects_9)
am_sortmergejoins_OBJECTS = $(am__objects_10) \
	sortmergejoins-cpu_mapping.$(OBJEXT) \
	sortmergejoins-numa_shuffle.$(OBJEXT) \
	sortmergejoins-memalloc.$(OBJEXT) \
	sortmergejoins-avxsort.$(OBJEXT) \
	sortmergejoins-merge.$(OBJEXT) \
	sortmergejoins-scalarsort.$(OBJEXT) \
	sortmergejoins-genzipf.$(OBJEXT) \
	sortmergejoins-generator.$(OBJEXT) \
	sortmergejoins-partition.$(OBJEXT) \
	sortmergejoins-joincommon.$(OBJEXT) \
	sortmergejoins-sortmergejoin_multipass.$(OBJEXT) \
	sortmergejoins-scalar_multiwaymerge.$(OBJEXT) \
	sortmergejoins-avx_multiwaymerge.$(OBJEXT) \
	sortmergejoins-sortmergejoin_multiway.$(OBJEXT) \
	sortmergejoins-sortmergejoin_mpsm.$(OBJEXT) \
	sortmergejoins-main.$(OBJEXT)
sortmergejoins_OBJECTS = $(am_sortmergejoins_OBJECTS)
sortmergejoins_LDADD = $(LDADD)
sortmergejoins_LINK = $(CCLD) $(sortmergejoins_CFLAGS) $(CFLAGS) \
	$(sortmergejoins_LDFLAGS) $(LDFLAGS) -o $@
am__tputbench_SOURCES_DIST = $(top_srcdir)/src/util/perf_counters.c \
	$(top_srcdir)/src/util/perf_counters.h $(top_srcdir)/config.h \
	$(top_srcdir)/src/types.h $(top_srcdir)/src/util/affinity.h \
	$(top_srcdir)/src/util/cpu_mapping.h \
	$(top_srcdir)/src/util/cpu_mapping.c \
	$(top_srcdir)/src/util/barrier.h \
	$(top_srcdir)/src/util/memalloc.h \
	$(top_srcdir)/src/util/memalloc.c \
	$(top_srcdir)/src/util/rdtsc.h \
	$(top_srcdir)/src/avxsort/avxcommon.h \
	$(top_srcdir)/src/avxsort/avxsort_core.h \
	$(top_srcdir)/src/avxsort/avxsort.h \
	$(top_srcdir)/src/avxsort/avxsort.c \
	$(top_srcdir)/src/merge/merge.h \
	$(top_srcdir)/src/merge/merge.c \
	$(top_srcdir)/src/scalarsort/scalarsort.h \
	$(top_srcdir)/src/scalarsort/scalarsort.c \
	$(top_srcdir)/src/datagen/genzipf.h \
	$(top_srcdir)/src/datagen/genzipf.c \
	$(top_srcdir)/src/datagen/generator.h \
	$(top_srcdir)/src/datagen/generator.c \
	$(top_srcdir)/src/partition/partition.h \
	$(top_srcdir)/src/partition/partition.c \
	$(top_srcdir)/src/joins/joincommon.h \
	$(top_srcdir)/src/joins/joincommon.c \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.h \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.c \
	$(top_srcdir)/src/merge/avx_multiwaymerge.h \
	$(top_srcdir)/src/merge/avx_multiwaymerge.c \
	$(top_srcdir)/src/bench/tputbench.c
#am__objects_11 =  \
#	tputbench-perf_counters.$(OBJEXT)
am__objects_12 = $(am__objects_11)
am_tputbench_OBJECTS = $(am__objects_12) \
	tputbench-cpu_mapping.$(OBJEXT) tputbench-memalloc.$(OBJEXT) \
	tputbench-avxsort.$(OBJEXT) tputbench-merge.$(OBJEXT) \
	tputbench-scalarsort.$(OBJEXT) tputbench-genzipf.$(OBJEXT) \
	tputbench-generator.$(OBJEXT) tputbench-partition.$(OBJEXT) \
	tputbench-joincommon.$(OBJEXT) \
	tputbench-scalar_multiwaymerge.$(OBJEXT) \
	tputbench-avx_multiwaymerge.$(OBJEXT) \
	tputbench-tputbench.$(OBJEXT)
tputbench_OBJECTS = $(am_tputbench_OBJECTS)
tputbench_LDADD = $(LDADD)
tputbench_LINK = $(CCLD) $(tputbench_CFLAGS) $(CFLAGS) \
	$(tputbench_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(bench_merge_SOURCES) $(bench_multiwaymerge_SOURCES) \
	$(bench_partitioning_SOURCES) $(bench_sort_SOURCES) \
	$(sortmergejoins_SOURCES) $(tputbench_SOURCES)
DIST_SOURCES = $(am__bench_merge_SOURCES_DIST) \
	$(am__bench_multiwaymerge_SOURCES_DIST) \
	$(am__bench_partitioning_SOURCES_DIST) \
	$(am__bench_sort_SOURCES_DIST) \
	$(am__sortmergejoins_SOURCES_DIST) \
	$(am__tputbench_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/sort-merge-joins-1.4/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /root/sort-merge-joins-1.4/missing autoconf
AUTOHEADER = ${SHELL} /root/sort-merge-joins-1.4/missing autoheader
AUTOMAKE = ${SHELL} /root/sort-merge-joins-1.4/missing automake-1.13
AWK = mawk
CC = c++
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -g
CHECK_CFLAGS = 
CHECK_LIBS = -lcheck
CPP = c++ -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lpthread -lm  $(am__append_8)
LTLIBOBJS = 
MAKEINFO = ${SHELL} /root/sort-merge-joins-1.4/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = sort-merge-joins
PACKAGE_BUGREPORT = cagri.balkesen@inf.ethz.ch
PACKAGE_NAME = sort-merge-joins
PACKAGE_STRING = sort-merge-joins 1.4
PACKAGE_TARNAME = sort-merge-joins
PACKAGE_URL = 
PACKAGE_VERSION = 1.4
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.4
abs_builddir = /root/sort-merge-joins-1.4/src
abs_srcdir = /root/sort-merge-joins-1.4/src
abs_top_builddir = /root/sort-merge-joins-1.4
abs_top_srcdir = /root/sort-merge-joins-1.4
ac_ct_CC = c++
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/sort-merge-joins-1.4/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = foreign
INCLUDE = -I. -I$(top_srcdir)/src/util/ -I$(top_srcdir)/src/datagen/ \
	-I$(top_srcdir)/src/merge/ -I$(top_srcdir)/src/avxsort/ \
	-I$(top_srcdir)/src/scalarsort/ -I$(top_srcdir)/src/partition/ \
	-I$(top_srcdir)/src/joins/

#
# Note: Best way to globally set system cache parameters is editing the following:
#
GLOBAL_SYSTEM_PARAMS = #-DCACHE_LINE_SIZE=64 -DL2_CACHE_SIZE=262144 -DL3_CACHE_SIZE=20971520
DEFINES = $(GLOBAL_SYSTEM_PARAMS) -D_GNU_SOURCE $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_9) \
	$(am__append_10) $(am__append_11) $(am__append_12) \
	$(am__append_13) $(am__append_14)
MYLDFLAGS = $(am__append_1) $(am__append_5)
MISC = $(am__append_6)
MISC_SRC = $(am__append_7)
AM_CFLAGS = -Wall -Wno-format -fno-strict-aliasing -std=c99 \
	$(am__append_15) $(am__append_16)

# for compiling with Intel Compiler (icc)
#ICC_FLAGS =
#-opt_report
AM_LDFLAGS = #-pthread

### 
# Main program for the sort-merge join algorithms
###
sortmergejoins_LDFLAGS = $(AM_LDFLAGS) $(MYLDFLAGS) -lpthread #-pthread 
sortmergejoins_CFLAGS = $(AM_CFLAGS) $(MISC) $(INCLUDE)
sortmergejoins_SOURCES = $(MISC_SRC) \
	$(top_srcdir)/config.h \
	$(top_srcdir)/src/types.h \
	$(top_srcdir)/src/util/affinity.h \
	$(top_srcdir)/src/util/cpu_mapping.h \
	$(top_srcdir)/src/util/cpu_mapping.c \
	$(top_srcdir)/src/util/numa_shuffle.h \
	$(top_srcdir)/src/util/numa_shuffle.c \
	$(top_srcdir)/src/util/memalloc.h \
	$(top_srcdir)/src/util/memalloc.c \
	$(top_srcdir)/src/util/barrier.h \
	$(top_srcdir)/src/util/rdtsc.h \
	$(top_srcdir)/src/avxsort/avxcommon.h \
	$(top_srcdir)/src/avxsort/avxsort_core.h \
	$(top_srcdir)/src/avxsort/avxsort.h \
	$(top_srcdir)/src/avxsort/avxsort.c \
	$(top_srcdir)/src/merge/merge.h \
	$(top_srcdir)/src/merge/merge.c \
	$(top_srcdir)/src/scalarsort/scalarsort.h \
	$(top_srcdir)/src/scalarsort/scalarsort.c \
	$(top_srcdir)/src/datagen/genzipf.h \
	$(top_srcdir)/src/datagen/genzipf.c \
	$(top_srcdir)/src/datagen/generator.h \
	$(top_srcdir)/src/datagen/generator.c \
	$(top_srcdir)/src/partition/partition.h \
	$(top_srcdir)/src/partition/partition.c \
	$(top_srcdir)/src/joins/joincommon.h \
	$(top_srcdir)/src/joins/joincommon.c \
	$(top_srcdir)/src/joins/sortmergejoin_multipass.h \
	$(top_srcdir)/src/joins/sortmergejoin_multipass.c \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.h \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.c \
	$(top_srcdir)/src/merge/avx_multiwaymerge.h \
	$(top_srcdir)/src/merge/avx_multiwaymerge.c \
	$(top_srcdir)/src/joins/sortmergejoin_multiway.h \
	$(top_srcdir)/src/joins/sortmergejoin_multiway.c \
	$(top_srcdir)/src/joins/sortmergejoin_mpsm.h \
	$(top_srcdir)/src/joins/sortmergejoin_mpsm.c \
	$(top_srcdir)/src/main.c


###
# Partitioning microbenchmark
###
bench_partitioning_LDFLAGS = $(AM_LDFLAGS) $(MYLDFLAGS)
bench_partitioning_CFLAGS = $(AM_CFLAGS) $(MISC) $(INCLUDE)
bench_partitioning_SOURCES = $(MISC_SRC) $(top_srcdir)/src/types.h	\
				$(top_srcdir)/src/util/rdtsc.h		\
				$(top_srcdir)/src/util/cpu_mapping.h	\
				$(top_srcdir)/src/util/cpu_mapping.c	\
				$(top_srcdir)/src/util/affinity.h	\
				$(top_srcdir)/src/util/lock.h		\
				$(top_srcdir)/src/util/memalloc.h	\
				$(top_srcdir)/src/util/memalloc.c	\
				$(top_srcdir)/src/util/barrier.h	\
				$(top_srcdir)/src/datagen/genzipf.h	\
				$(top_srcdir)/src/datagen/genzipf.c	\
				$(top_srcdir)/src/datagen/generator.h	\
				$(top_srcdir)/src/datagen/generator.c	\
				$(top_srcdir)/src/partition/partition.h	\
				$(top_srcdir)/src/partition/partition.c	\
				$(top_srcdir)/src/bench/partitioningbench.c			


###
# Merge microbenchmarks
###
bench_merge_LDFLAGS = $(AM_LDFLAGS) $(MYLDFLAGS)
bench_merge_CFLAGS = $(AM_CFLAGS) $(MISC) $(INCLUDE) -I$(top_srcdir)/tests/
bench_merge_SOURCES = $(MISC_SRC) $(top_srcdir)/src/util/affinity.h \
			$(top_srcdir)/src/avxsort/avxsort_core.h \
			$(top_srcdir)/tests/testutil.h \
			$(top_srcdir)/tests/testutil.c \
			$(top_srcdir)/src/bench/mergebench.c


###
# Multi-way merge microbenchmarks
###
bench_multiwaymerge_LDFLAGS = $(AM_LDFLAGS) $(MYLDFLAGS)
bench_multiwaymerge_CFLAGS = $(AM_CFLAGS) $(MISC) $(INCLUDE) -I$(top_srcdir)/tests/
bench_multiwaymerge_SOURCES = $(MISC_SRC) $(top_srcdir)/src/util/affinity.h \
			  $(top_srcdir)/src/merge/avx_multiwaymerge.h \
			  $(top_srcdir)/src/merge/avx_multiwaymerge.c \
			  $(top_srcdir)/src/merge/scalar_multiwaymerge.h \
			  $(top_srcdir)/src/merge/scalar_multiwaymerge.c \
			  $(top_srcdir)/tests/testutil.h \
			  $(top_srcdir)/tests/testutil.c \
			  $(top_srcdir)/src/bench/multiwaymergebench.c


###
# Sorting microbenchmarks
### 
bench_sort_LDFLAGS = $(AM_LDFLAGS) $(MYLDFLAGS)
bench_sort_CFLAGS = $(AM_CFLAGS) $(MISC) $(INCLUDE) -I$(top_srcdir)/tests/
bench_sort_SOURCES = $(MISC_SRC) $(top_srcdir)/src/util/affinity.h	\
			$(top_srcdir)/src/util/cpu_mapping.h		\
			$(top_srcdir)/src/util/cpu_mapping.c		\
			$(top_srcdir)/tests/testutil.h			\
			$(top_srcdir)/tests/testutil.c			\
			$(top_srcdir)/src/avxsort/avxcommon.h		\
			$(top_srcdir)/src/avxsort/avxsort_core.h	\
			$(top_srcdir)/src/avxsort/avxsort.h		\
			$(top_srcdir)/src/avxsort/avxsort.c		\
			$(top_srcdir)/src/merge/merge.h			\
		        $(top_srcdir)/src/merge/merge.c			\
			$(top_srcdir)/src/merge/avx_multiwaymerge.h	\
			$(top_srcdir)/src/merge/avx_multiwaymerge.c	\
			$(top_srcdir)/src/avxsort/avxsort_multiway.h	\
			$(top_srcdir)/src/avxsort/avxsort_multiway.c	\
			$(top_srcdir)/src/datagen/genzipf.h		\
			$(top_srcdir)/src/datagen/genzipf.c		\
			$(top_srcdir)/src/datagen/generator.h		\
			$(top_srcdir)/src/datagen/generator.c		\
			$(top_srcdir)/src/bench/sortbench.c							


### 
# Throughput benchmarks for partitioning/merging and NUMA memcpy/read using m-way join
###
tputbench_LDFLAGS = $(AM_LDFLAGS) $(MYLDFLAGS) -lpthread #-pthread 
tputbench_CFLAGS = $(AM_CFLAGS) $(MISC) $(INCLUDE)
tputbench_SOURCES = $(MISC_SRC) \
	$(top_srcdir)/config.h \
	$(top_srcdir)/src/types.h \
	$(top_srcdir)/src/util/affinity.h \
	$(top_srcdir)/src/util/cpu_mapping.h \
	$(top_srcdir)/src/util/cpu_mapping.c \
	$(top_srcdir)/src/util/barrier.h \
	$(top_srcdir)/src/util/memalloc.h \
	$(top_srcdir)/src/util/memalloc.c \
	$(top_srcdir)/src/util/rdtsc.h \
	$(top_srcdir)/src/avxsort/avxcommon.h \
	$(top_srcdir)/src/avxsort/avxsort_core.h \
	$(top_srcdir)/src/avxsort/avxsort.h \
	$(top_srcdir)/src/avxsort/avxsort.c \
	$(top_srcdir)/src/merge/merge.h \
	$(top_srcdir)/src/merge/merge.c \
	$(top_srcdir)/src/scalarsort/scalarsort.h \
	$(top_srcdir)/src/scalarsort/scalarsort.c \
	$(top_srcdir)/src/datagen/genzipf.h \
	$(top_srcdir)/src/datagen/genzipf.c \
	$(top_srcdir)/src/datagen/generator.h \
	$(top_srcdir)/src/datagen/generator.c \
	$(top_srcdir)/src/partition/partition.h \
	$(top_srcdir)/src/partition/partition.c \
	$(top_srcdir)/src/joins/joincommon.h \
	$(top_srcdir)/src/joins/joincommon.c \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.h \
	$(top_srcdir)/src/merge/scalar_multiwaymerge.c \
	$(top_srcdir)/src/merge/avx_multiwaymerge.h \
	$(top_srcdir)/src/merge/avx_multiwaymerge.c \
	$(top_srcdir)/src/bench/tputbench.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

bench_merge$(EXEEXT): $(bench_merge_OBJECTS) $(bench_merge_DEPENDENCIES) $(EXTRA_bench_merge_DEPENDENCIES) 
	@rm -f bench_merge$(EXEEXT)
	$(AM_V_CCLD)$(bench_merge_LINK) $(bench_merge_OBJECTS) $(bench_merge_LDADD) $(LIBS)

bench_multiwaymerge$(EXEEXT): $(bench_multiwaymerge_OBJECTS) $(bench_multiwaymerge_DEPENDENCIES) $(EXTRA_bench_multiwaymerge_DEPENDENCIES) 
	@rm -f bench_multiwaymerge$(EXEEXT)
	$(AM_V_CCLD)$(bench_multiwaymerge_LINK) $(bench_multiwaymerge_OBJECTS) $(bench_multiwaymerge_LDADD) $(LIBS)

bench_partitioning$(EXEEXT): $(bench_partitioning_OBJECTS) $(bench_partitioning_DEPENDENCIES) $(EXTRA_bench_partitioning_DEPENDENCIES) 
	@rm -f bench_partitioning$(EXEEXT)
	$(AM_V_CCLD)$(bench_partitioning_LINK) $(bench_partitioning_OBJECTS) $(bench_partitioning_LDADD) $(LIBS)

bench_sort$(EXEEXT): $(bench_sort_OBJECTS) $(bench_sort_DEPENDENCIES) $(EXTRA_bench_sort_DEPENDENCIES) 
	@rm -f bench_sort$(EXEEXT)
	$(AM_V_CCLD)$(bench_sort_LINK) $(bench_sort_OBJECTS) $(bench_sort_LDADD) $(LIBS)

sortmergejoins$(EXEEXT): $(sortmergejoins_OBJECTS) $(sortmergejoins_DEPENDENCIES) $(EXTRA_sortmergejoins_DEPENDENCIES) 
	@rm -f sortmergejoins$(EXEEXT)
	$(AM_V_CCLD)$(sortmergejoins_LINK) $(sortmergejoins_OBJECTS) $(sortmergejoins_LDADD) $(LIBS)

tputbench$(EXEEXT): $(tputbench_OBJECTS) $(tputbench_DEPENDENCIES) $(EXTRA_tputbench_DEPENDENCIES) 
	@rm -f tputbench$(EXEEXT)
	$(AM_V_CCLD)$(tputbench_LINK) $(tputbench_OBJECTS) $(tputbench_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bench_merge-mergebench.Po
include ./$(DEPDIR)/bench_merge-perf_counters.Po
include ./$(DEPDIR)/bench_merge-testutil.Po
include ./$(DEPDIR)/bench_multiwaymerge-avx_multiwaymerge.Po
include ./$(DEPDIR)/bench_multiwaymerge-multiwaymergebench.Po
include ./$(DEPDIR)/bench_multiwaymerge-perf_counters.Po
include ./$(DEPDIR)/bench_multiwaymerge-scalar_multiwaymerge.Po
include ./$(DEPDIR)/bench_multiwaymerge-testutil.Po
include ./$(DEPDIR)/bench_partitioning-cpu_mapping.Po
include ./$(DEPDIR)/bench_partitioning-generator.Po
include ./$(DEPDIR)/bench_partitioning-genzipf.Po
include ./$(DEPDIR)/bench_partitioning-memalloc.Po
include ./$(DEPDIR)/bench_partitioning-partition.Po
include ./$(DEPDIR)/bench_partitioning-partitioningbench.Po
include ./$(DEPDIR)/bench_partitioning-perf_counters.Po
include ./$(DEPDIR)/bench_sort-avx_multiwaymerge.Po
include ./$(DEPDIR)/bench_sort-avxsort.Po
include ./$(DEPDIR)/bench_sort-avxsort_multiway.Po
include ./$(DEPDIR)/bench_sort-cpu_mapping.Po
include ./$(DEPDIR)/bench_sort-generator.Po
include ./$(DEPDIR)/bench_sort-genzipf.Po
include ./$(DEPDIR)/bench_sort-merge.Po
include ./$(DEPDIR)/bench_sort-perf_counters.Po
include ./$(DEPDIR)/bench_sort-sortbench.Po
include ./$(DEPDIR)/bench_sort-testutil.Po
include ./$(DEPDIR)/sortmergejoins-avx_multiwaymerge.Po
include ./$(DEPDIR)/sortmergejoins-avxsort.Po
include ./$(DEPDIR)/sortmergejoins-cpu_mapping.Po
include ./$(DEPDIR)/sortmergejoins-generator.Po
include ./$(DEPDIR)/sortmergejoins-genzipf.Po
include ./$(DEPDIR)/sortmergejoins-joincommon.Po
include ./$(DEPDIR)/sortmergejoins-main.Po
include ./$(DEPDIR)/sortmergejoins-memalloc.Po
include ./$(DEPDIR)/sortmergejoins-merge.Po
include ./$(DEPDIR)/sortmergejoins-numa_shuffle.Po
include ./$(DEPDIR)/sortmergejoins-partition.Po
include ./$(DEPDIR)/sortmergejoins-perf_counters.Po
include ./$(DEPDIR)/sortmergejoins-scalar_multiwaymerge.Po
include ./$(DEPDIR)/sortmergejoins-scalarsort.Po
include ./$(DEPDIR)/sortmergejoins-sortmergejoin_mpsm.Po
include ./$(DEPDIR)/sortmergejoins-sortmergejoin_multipass.Po
include ./$(DEPDIR)/sortmergejoins-sortmergejoin_multiway.Po
include ./$(DEPDIR)/tputbench-avx_multiwaymerge.Po
include ./$(DEPDIR)/tputbench-avxsort.Po
include ./$(DEPDIR)/tputbench-cpu_mapping.Po
include ./$(DEPDIR)/tputbench-generator.Po
include ./$(DEPDIR)/tputbench-genzipf.Po
include ./$(DEPDIR)/tputbench-joincommon.Po
include ./$(DEPDIR)/tputbench-memalloc.Po
include ./$(DEPDIR)/tputbench-merge.Po
include ./$(DEPDIR)/tputbench-partition.Po
include ./$(DEPDIR)/tputbench-perf_counters.Po
include ./$(DEPDIR)/tputbench-scalar_multiwaymerge.Po
include ./$(DEPDIR)/tputbench-scalarsort.Po
include ./$(DEPDIR)/tputbench-tputbench.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

bench_merge-perf_counters.o: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -MT bench_merge-perf_counters.o -MD -MP -MF $(DEPDIR)/bench_merge-perf_counters.Tpo -c -o bench_merge-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_merge-perf_counters.Tpo $(DEPDIR)/bench_merge-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='bench_merge-perf_counters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -c -o bench_merge-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c

bench_merge-perf_counters.obj: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -MT bench_merge-perf_counters.obj -MD -MP -MF $(DEPDIR)/bench_merge-perf_counters.Tpo -c -o bench_merge-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_merge-perf_counters.Tpo $(DEPDIR)/bench_merge-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='bench_merge-perf_counters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -c -o bench_merge-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`

bench_merge-testutil.o: $(top_srcdir)/tests/testutil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -MT bench_merge-testutil.o -MD -MP -MF $(DEPDIR)/bench_merge-testutil.Tpo -c -o bench_merge-testutil.o `test -f '$(top_srcdir)/tests/testutil.c' || echo '$(srcdir)/'`$(top_srcdir)/tests/testutil.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_merge-testutil.Tpo $(DEPDIR)/bench_merge-testutil.Po
#	$(AM_V_CC)source='$(top_srcdir)/tests/testutil.c' object='bench_merge-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -c -o bench_merge-testutil.o `test -f '$(top_srcdir)/tests/testutil.c' || echo '$(srcdir)/'`$(top_srcdir)/tests/testutil.c

bench_merge-testutil.obj: $(top_srcdir)/tests/testutil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -MT bench_merge-testutil.obj -MD -MP -MF $(DEPDIR)/bench_merge-testutil.Tpo -c -o bench_merge-testutil.obj `if test -f '$(top_srcdir)/tests/testutil.c'; then $(CYGPATH_W) '$(top_srcdir)/tests/testutil.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/tests/testutil.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_merge-testutil.Tpo $(DEPDIR)/bench_merge-testutil.Po
#	$(AM_V_CC)source='$(top_srcdir)/tests/testutil.c' object='bench_merge-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -c -o bench_merge-testutil.obj `if test -f '$(top_srcdir)/tests/testutil.c'; then $(CYGPATH_W) '$(top_srcdir)/tests/testutil.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/tests/testutil.c'; fi`

bench_merge-mergebench.o: $(top_srcdir)/src/bench/mergebench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -MT bench_merge-mergebench.o -MD -MP -MF $(DEPDIR)/bench_merge-mergebench.Tpo -c -o bench_merge-mergebench.o `test -f '$(top_srcdir)/src/bench/mergebench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/mergebench.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_merge-mergebench.Tpo $(DEPDIR)/bench_merge-mergebench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/mergebench.c' object='bench_merge-mergebench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -c -o bench_merge-mergebench.o `test -f '$(top_srcdir)/src/bench/mergebench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/mergebench.c

bench_merge-mergebench.obj: $(top_srcdir)/src/bench/mergebench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -MT bench_merge-mergebench.obj -MD -MP -MF $(DEPDIR)/bench_merge-mergebench.Tpo -c -o bench_merge-mergebench.obj `if test -f '$(top_srcdir)/src/bench/mergebench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/mergebench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/mergebench.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_merge-mergebench.Tpo $(DEPDIR)/bench_merge-mergebench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/mergebench.c' object='bench_merge-mergebench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_merge_CFLAGS) $(CFLAGS) -c -o bench_merge-mergebench.obj `if test -f '$(top_srcdir)/src/bench/mergebench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/mergebench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/mergebench.c'; fi`

bench_multiwaymerge-perf_counters.o: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-perf_counters.o -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-perf_counters.Tpo -c -o bench_multiwaymerge-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-perf_counters.Tpo $(DEPDIR)/bench_multiwaymerge-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='bench_multiwaymerge-perf_counters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c

bench_multiwaymerge-perf_counters.obj: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-perf_counters.obj -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-perf_counters.Tpo -c -o bench_multiwaymerge-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-perf_counters.Tpo $(DEPDIR)/bench_multiwaymerge-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='bench_multiwaymerge-perf_counters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`

bench_multiwaymerge-avx_multiwaymerge.o: $(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-avx_multiwaymerge.o -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-avx_multiwaymerge.Tpo -c -o bench_multiwaymerge-avx_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-avx_multiwaymerge.Tpo $(DEPDIR)/bench_multiwaymerge-avx_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/avx_multiwaymerge.c' object='bench_multiwaymerge-avx_multiwaymerge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-avx_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/avx_multiwaymerge.c

bench_multiwaymerge-avx_multiwaymerge.obj: $(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-avx_multiwaymerge.obj -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-avx_multiwaymerge.Tpo -c -o bench_multiwaymerge-avx_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/avx_multiwaymerge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-avx_multiwaymerge.Tpo $(DEPDIR)/bench_multiwaymerge-avx_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/avx_multiwaymerge.c' object='bench_multiwaymerge-avx_multiwaymerge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-avx_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/avx_multiwaymerge.c'; fi`

bench_multiwaymerge-scalar_multiwaymerge.o: $(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-scalar_multiwaymerge.o -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-scalar_multiwaymerge.Tpo -c -o bench_multiwaymerge-scalar_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-scalar_multiwaymerge.Tpo $(DEPDIR)/bench_multiwaymerge-scalar_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/scalar_multiwaymerge.c' object='bench_multiwaymerge-scalar_multiwaymerge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-scalar_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/scalar_multiwaymerge.c

bench_multiwaymerge-scalar_multiwaymerge.obj: $(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-scalar_multiwaymerge.obj -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-scalar_multiwaymerge.Tpo -c -o bench_multiwaymerge-scalar_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-scalar_multiwaymerge.Tpo $(DEPDIR)/bench_multiwaymerge-scalar_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/scalar_multiwaymerge.c' object='bench_multiwaymerge-scalar_multiwaymerge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-scalar_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; fi`

bench_multiwaymerge-testutil.o: $(top_srcdir)/tests/testutil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-testutil.o -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-testutil.Tpo -c -o bench_multiwaymerge-testutil.o `test -f '$(top_srcdir)/tests/testutil.c' || echo '$(srcdir)/'`$(top_srcdir)/tests/testutil.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-testutil.Tpo $(DEPDIR)/bench_multiwaymerge-testutil.Po
#	$(AM_V_CC)source='$(top_srcdir)/tests/testutil.c' object='bench_multiwaymerge-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-testutil.o `test -f '$(top_srcdir)/tests/testutil.c' || echo '$(srcdir)/'`$(top_srcdir)/tests/testutil.c

bench_multiwaymerge-testutil.obj: $(top_srcdir)/tests/testutil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-testutil.obj -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-testutil.Tpo -c -o bench_multiwaymerge-testutil.obj `if test -f '$(top_srcdir)/tests/testutil.c'; then $(CYGPATH_W) '$(top_srcdir)/tests/testutil.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/tests/testutil.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-testutil.Tpo $(DEPDIR)/bench_multiwaymerge-testutil.Po
#	$(AM_V_CC)source='$(top_srcdir)/tests/testutil.c' object='bench_multiwaymerge-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-testutil.obj `if test -f '$(top_srcdir)/tests/testutil.c'; then $(CYGPATH_W) '$(top_srcdir)/tests/testutil.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/tests/testutil.c'; fi`

bench_multiwaymerge-multiwaymergebench.o: $(top_srcdir)/src/bench/multiwaymergebench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-multiwaymergebench.o -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-multiwaymergebench.Tpo -c -o bench_multiwaymerge-multiwaymergebench.o `test -f '$(top_srcdir)/src/bench/multiwaymergebench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/multiwaymergebench.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-multiwaymergebench.Tpo $(DEPDIR)/bench_multiwaymerge-multiwaymergebench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/multiwaymergebench.c' object='bench_multiwaymerge-multiwaymergebench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-multiwaymergebench.o `test -f '$(top_srcdir)/src/bench/multiwaymergebench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/multiwaymergebench.c

bench_multiwaymerge-multiwaymergebench.obj: $(top_srcdir)/src/bench/multiwaymergebench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -MT bench_multiwaymerge-multiwaymergebench.obj -MD -MP -MF $(DEPDIR)/bench_multiwaymerge-multiwaymergebench.Tpo -c -o bench_multiwaymerge-multiwaymergebench.obj `if test -f '$(top_srcdir)/src/bench/multiwaymergebench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/multiwaymergebench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/multiwaymergebench.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_multiwaymerge-multiwaymergebench.Tpo $(DEPDIR)/bench_multiwaymerge-multiwaymergebench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/multiwaymergebench.c' object='bench_multiwaymerge-multiwaymergebench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_multiwaymerge_CFLAGS) $(CFLAGS) -c -o bench_multiwaymerge-multiwaymergebench.obj `if test -f '$(top_srcdir)/src/bench/multiwaymergebench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/multiwaymergebench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/multiwaymergebench.c'; fi`

bench_partitioning-perf_counters.o: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-perf_counters.o -MD -MP -MF $(DEPDIR)/bench_partitioning-perf_counters.Tpo -c -o bench_partitioning-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-perf_counters.Tpo $(DEPDIR)/bench_partitioning-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='bench_partitioning-perf_counters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c

bench_partitioning-perf_counters.obj: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-perf_counters.obj -MD -MP -MF $(DEPDIR)/bench_partitioning-perf_counters.Tpo -c -o bench_partitioning-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-perf_counters.Tpo $(DEPDIR)/bench_partitioning-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='bench_partitioning-perf_counters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`

bench_partitioning-cpu_mapping.o: $(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-cpu_mapping.o -MD -MP -MF $(DEPDIR)/bench_partitioning-cpu_mapping.Tpo -c -o bench_partitioning-cpu_mapping.o `test -f '$(top_srcdir)/src/util/cpu_mapping.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-cpu_mapping.Tpo $(DEPDIR)/bench_partitioning-cpu_mapping.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/cpu_mapping.c' object='bench_partitioning-cpu_mapping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-cpu_mapping.o `test -f '$(top_srcdir)/src/util/cpu_mapping.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/cpu_mapping.c

bench_partitioning-cpu_mapping.obj: $(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-cpu_mapping.obj -MD -MP -MF $(DEPDIR)/bench_partitioning-cpu_mapping.Tpo -c -o bench_partitioning-cpu_mapping.obj `if test -f '$(top_srcdir)/src/util/cpu_mapping.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/cpu_mapping.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/cpu_mapping.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-cpu_mapping.Tpo $(DEPDIR)/bench_partitioning-cpu_mapping.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/cpu_mapping.c' object='bench_partitioning-cpu_mapping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-cpu_mapping.obj `if test -f '$(top_srcdir)/src/util/cpu_mapping.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/cpu_mapping.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/cpu_mapping.c'; fi`

bench_partitioning-memalloc.o: $(top_srcdir)/src/util/memalloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-memalloc.o -MD -MP -MF $(DEPDIR)/bench_partitioning-memalloc.Tpo -c -o bench_partitioning-memalloc.o `test -f '$(top_srcdir)/src/util/memalloc.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/memalloc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-memalloc.Tpo $(DEPDIR)/bench_partitioning-memalloc.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/memalloc.c' object='bench_partitioning-memalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-memalloc.o `test -f '$(top_srcdir)/src/util/memalloc.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/memalloc.c

bench_partitioning-memalloc.obj: $(top_srcdir)/src/util/memalloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-memalloc.obj -MD -MP -MF $(DEPDIR)/bench_partitioning-memalloc.Tpo -c -o bench_partitioning-memalloc.obj `if test -f '$(top_srcdir)/src/util/memalloc.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/memalloc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/memalloc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-memalloc.Tpo $(DEPDIR)/bench_partitioning-memalloc.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/memalloc.c' object='bench_partitioning-memalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-memalloc.obj `if test -f '$(top_srcdir)/src/util/memalloc.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/memalloc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/memalloc.c'; fi`

bench_partitioning-genzipf.o: $(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-genzipf.o -MD -MP -MF $(DEPDIR)/bench_partitioning-genzipf.Tpo -c -o bench_partitioning-genzipf.o `test -f '$(top_srcdir)/src/datagen/genzipf.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-genzipf.Tpo $(DEPDIR)/bench_partitioning-genzipf.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/genzipf.c' object='bench_partitioning-genzipf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-genzipf.o `test -f '$(top_srcdir)/src/datagen/genzipf.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/genzipf.c

bench_partitioning-genzipf.obj: $(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-genzipf.obj -MD -MP -MF $(DEPDIR)/bench_partitioning-genzipf.Tpo -c -o bench_partitioning-genzipf.obj `if test -f '$(top_srcdir)/src/datagen/genzipf.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/genzipf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/genzipf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-genzipf.Tpo $(DEPDIR)/bench_partitioning-genzipf.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/genzipf.c' object='bench_partitioning-genzipf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-genzipf.obj `if test -f '$(top_srcdir)/src/datagen/genzipf.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/genzipf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/genzipf.c'; fi`

bench_partitioning-generator.o: $(top_srcdir)/src/datagen/generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-generator.o -MD -MP -MF $(DEPDIR)/bench_partitioning-generator.Tpo -c -o bench_partitioning-generator.o `test -f '$(top_srcdir)/src/datagen/generator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/generator.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-generator.Tpo $(DEPDIR)/bench_partitioning-generator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/generator.c' object='bench_partitioning-generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-generator.o `test -f '$(top_srcdir)/src/datagen/generator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/generator.c

bench_partitioning-generator.obj: $(top_srcdir)/src/datagen/generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-generator.obj -MD -MP -MF $(DEPDIR)/bench_partitioning-generator.Tpo -c -o bench_partitioning-generator.obj `if test -f '$(top_srcdir)/src/datagen/generator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/generator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/generator.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-generator.Tpo $(DEPDIR)/bench_partitioning-generator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/generator.c' object='bench_partitioning-generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-generator.obj `if test -f '$(top_srcdir)/src/datagen/generator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/generator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/generator.c'; fi`

bench_partitioning-partition.o: $(top_srcdir)/src/partition/partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-partition.o -MD -MP -MF $(DEPDIR)/bench_partitioning-partition.Tpo -c -o bench_partitioning-partition.o `test -f '$(top_srcdir)/src/partition/partition.c' || echo '$(srcdir)/'`$(top_srcdir)/src/partition/partition.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-partition.Tpo $(DEPDIR)/bench_partitioning-partition.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/partition/partition.c' object='bench_partitioning-partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-partition.o `test -f '$(top_srcdir)/src/partition/partition.c' || echo '$(srcdir)/'`$(top_srcdir)/src/partition/partition.c

bench_partitioning-partition.obj: $(top_srcdir)/src/partition/partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-partition.obj -MD -MP -MF $(DEPDIR)/bench_partitioning-partition.Tpo -c -o bench_partitioning-partition.obj `if test -f '$(top_srcdir)/src/partition/partition.c'; then $(CYGPATH_W) '$(top_srcdir)/src/partition/partition.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/partition/partition.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-partition.Tpo $(DEPDIR)/bench_partitioning-partition.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/partition/partition.c' object='bench_partitioning-partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-partition.obj `if test -f '$(top_srcdir)/src/partition/partition.c'; then $(CYGPATH_W) '$(top_srcdir)/src/partition/partition.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/partition/partition.c'; fi`

bench_partitioning-partitioningbench.o: $(top_srcdir)/src/bench/partitioningbench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-partitioningbench.o -MD -MP -MF $(DEPDIR)/bench_partitioning-partitioningbench.Tpo -c -o bench_partitioning-partitioningbench.o `test -f '$(top_srcdir)/src/bench/partitioningbench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/partitioningbench.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-partitioningbench.Tpo $(DEPDIR)/bench_partitioning-partitioningbench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/partitioningbench.c' object='bench_partitioning-partitioningbench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-partitioningbench.o `test -f '$(top_srcdir)/src/bench/partitioningbench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/partitioningbench.c

bench_partitioning-partitioningbench.obj: $(top_srcdir)/src/bench/partitioningbench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -MT bench_partitioning-partitioningbench.obj -MD -MP -MF $(DEPDIR)/bench_partitioning-partitioningbench.Tpo -c -o bench_partitioning-partitioningbench.obj `if test -f '$(top_srcdir)/src/bench/partitioningbench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/partitioningbench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/partitioningbench.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_partitioning-partitioningbench.Tpo $(DEPDIR)/bench_partitioning-partitioningbench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/partitioningbench.c' object='bench_partitioning-partitioningbench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_partitioning_CFLAGS) $(CFLAGS) -c -o bench_partitioning-partitioningbench.obj `if test -f '$(top_srcdir)/src/bench/partitioningbench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/partitioningbench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/partitioningbench.c'; fi`

bench_sort-perf_counters.o: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-perf_counters.o -MD -MP -MF $(DEPDIR)/bench_sort-perf_counters.Tpo -c -o bench_sort-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-perf_counters.Tpo $(DEPDIR)/bench_sort-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='bench_sort-perf_counters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c

bench_sort-perf_counters.obj: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-perf_counters.obj -MD -MP -MF $(DEPDIR)/bench_sort-perf_counters.Tpo -c -o bench_sort-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-perf_counters.Tpo $(DEPDIR)/bench_sort-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='bench_sort-perf_counters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`

bench_sort-cpu_mapping.o: $(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-cpu_mapping.o -MD -MP -MF $(DEPDIR)/bench_sort-cpu_mapping.Tpo -c -o bench_sort-cpu_mapping.o `test -f '$(top_srcdir)/src/util/cpu_mapping.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-cpu_mapping.Tpo $(DEPDIR)/bench_sort-cpu_mapping.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/cpu_mapping.c' object='bench_sort-cpu_mapping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-cpu_mapping.o `test -f '$(top_srcdir)/src/util/cpu_mapping.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/cpu_mapping.c

bench_sort-cpu_mapping.obj: $(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-cpu_mapping.obj -MD -MP -MF $(DEPDIR)/bench_sort-cpu_mapping.Tpo -c -o bench_sort-cpu_mapping.obj `if test -f '$(top_srcdir)/src/util/cpu_mapping.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/cpu_mapping.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/cpu_mapping.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-cpu_mapping.Tpo $(DEPDIR)/bench_sort-cpu_mapping.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/cpu_mapping.c' object='bench_sort-cpu_mapping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-cpu_mapping.obj `if test -f '$(top_srcdir)/src/util/cpu_mapping.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/cpu_mapping.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/cpu_mapping.c'; fi`

bench_sort-testutil.o: $(top_srcdir)/tests/testutil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-testutil.o -MD -MP -MF $(DEPDIR)/bench_sort-testutil.Tpo -c -o bench_sort-testutil.o `test -f '$(top_srcdir)/tests/testutil.c' || echo '$(srcdir)/'`$(top_srcdir)/tests/testutil.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-testutil.Tpo $(DEPDIR)/bench_sort-testutil.Po
#	$(AM_V_CC)source='$(top_srcdir)/tests/testutil.c' object='bench_sort-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-testutil.o `test -f '$(top_srcdir)/tests/testutil.c' || echo '$(srcdir)/'`$(top_srcdir)/tests/testutil.c

bench_sort-testutil.obj: $(top_srcdir)/tests/testutil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-testutil.obj -MD -MP -MF $(DEPDIR)/bench_sort-testutil.Tpo -c -o bench_sort-testutil.obj `if test -f '$(top_srcdir)/tests/testutil.c'; then $(CYGPATH_W) '$(top_srcdir)/tests/testutil.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/tests/testutil.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-testutil.Tpo $(DEPDIR)/bench_sort-testutil.Po
#	$(AM_V_CC)source='$(top_srcdir)/tests/testutil.c' object='bench_sort-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-testutil.obj `if test -f '$(top_srcdir)/tests/testutil.c'; then $(CYGPATH_W) '$(top_srcdir)/tests/testutil.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/tests/testutil.c'; fi`

bench_sort-avxsort.o: $(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-avxsort.o -MD -MP -MF $(DEPDIR)/bench_sort-avxsort.Tpo -c -o bench_sort-avxsort.o `test -f '$(top_srcdir)/src/avxsort/avxsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-avxsort.Tpo $(DEPDIR)/bench_sort-avxsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/avxsort/avxsort.c' object='bench_sort-avxsort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-avxsort.o `test -f '$(top_srcdir)/src/avxsort/avxsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/avxsort/avxsort.c

bench_sort-avxsort.obj: $(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-avxsort.obj -MD -MP -MF $(DEPDIR)/bench_sort-avxsort.Tpo -c -o bench_sort-avxsort.obj `if test -f '$(top_srcdir)/src/avxsort/avxsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/avxsort/avxsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/avxsort/avxsort.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-avxsort.Tpo $(DEPDIR)/bench_sort-avxsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/avxsort/avxsort.c' object='bench_sort-avxsort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-avxsort.obj `if test -f '$(top_srcdir)/src/avxsort/avxsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/avxsort/avxsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/avxsort/avxsort.c'; fi`

bench_sort-merge.o: $(top_srcdir)/src/merge/merge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-merge.o -MD -MP -MF $(DEPDIR)/bench_sort-merge.Tpo -c -o bench_sort-merge.o `test -f '$(top_srcdir)/src/merge/merge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/merge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-merge.Tpo $(DEPDIR)/bench_sort-merge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/merge.c' object='bench_sort-merge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-merge.o `test -f '$(top_srcdir)/src/merge/merge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/merge.c

bench_sort-merge.obj: $(top_srcdir)/src/merge/merge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-merge.obj -MD -MP -MF $(DEPDIR)/bench_sort-merge.Tpo -c -o bench_sort-merge.obj `if test -f '$(top_srcdir)/src/merge/merge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/merge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/merge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-merge.Tpo $(DEPDIR)/bench_sort-merge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/merge.c' object='bench_sort-merge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-merge.obj `if test -f '$(top_srcdir)/src/merge/merge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/merge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/merge.c'; fi`

bench_sort-avx_multiwaymerge.o: $(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-avx_multiwaymerge.o -MD -MP -MF $(DEPDIR)/bench_sort-avx_multiwaymerge.Tpo -c -o bench_sort-avx_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-avx_multiwaymerge.Tpo $(DEPDIR)/bench_sort-avx_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/avx_multiwaymerge.c' object='bench_sort-avx_multiwaymerge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-avx_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/avx_multiwaymerge.c

bench_sort-avx_multiwaymerge.obj: $(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-avx_multiwaymerge.obj -MD -MP -MF $(DEPDIR)/bench_sort-avx_multiwaymerge.Tpo -c -o bench_sort-avx_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/avx_multiwaymerge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-avx_multiwaymerge.Tpo $(DEPDIR)/bench_sort-avx_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/avx_multiwaymerge.c' object='bench_sort-avx_multiwaymerge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-avx_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/avx_multiwaymerge.c'; fi`

bench_sort-avxsort_multiway.o: $(top_srcdir)/src/avxsort/avxsort_multiway.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-avxsort_multiway.o -MD -MP -MF $(DEPDIR)/bench_sort-avxsort_multiway.Tpo -c -o bench_sort-avxsort_multiway.o `test -f '$(top_srcdir)/src/avxsort/avxsort_multiway.c' || echo '$(srcdir)/'`$(top_srcdir)/src/avxsort/avxsort_multiway.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-avxsort_multiway.Tpo $(DEPDIR)/bench_sort-avxsort_multiway.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/avxsort/avxsort_multiway.c' object='bench_sort-avxsort_multiway.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-avxsort_multiway.o `test -f '$(top_srcdir)/src/avxsort/avxsort_multiway.c' || echo '$(srcdir)/'`$(top_srcdir)/src/avxsort/avxsort_multiway.c

bench_sort-avxsort_multiway.obj: $(top_srcdir)/src/avxsort/avxsort_multiway.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-avxsort_multiway.obj -MD -MP -MF $(DEPDIR)/bench_sort-avxsort_multiway.Tpo -c -o bench_sort-avxsort_multiway.obj `if test -f '$(top_srcdir)/src/avxsort/avxsort_multiway.c'; then $(CYGPATH_W) '$(top_srcdir)/src/avxsort/avxsort_multiway.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/avxsort/avxsort_multiway.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-avxsort_multiway.Tpo $(DEPDIR)/bench_sort-avxsort_multiway.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/avxsort/avxsort_multiway.c' object='bench_sort-avxsort_multiway.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-avxsort_multiway.obj `if test -f '$(top_srcdir)/src/avxsort/avxsort_multiway.c'; then $(CYGPATH_W) '$(top_srcdir)/src/avxsort/avxsort_multiway.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/avxsort/avxsort_multiway.c'; fi`

bench_sort-genzipf.o: $(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-genzipf.o -MD -MP -MF $(DEPDIR)/bench_sort-genzipf.Tpo -c -o bench_sort-genzipf.o `test -f '$(top_srcdir)/src/datagen/genzipf.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-genzipf.Tpo $(DEPDIR)/bench_sort-genzipf.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/genzipf.c' object='bench_sort-genzipf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-genzipf.o `test -f '$(top_srcdir)/src/datagen/genzipf.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/genzipf.c

bench_sort-genzipf.obj: $(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-genzipf.obj -MD -MP -MF $(DEPDIR)/bench_sort-genzipf.Tpo -c -o bench_sort-genzipf.obj `if test -f '$(top_srcdir)/src/datagen/genzipf.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/genzipf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/genzipf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-genzipf.Tpo $(DEPDIR)/bench_sort-genzipf.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/genzipf.c' object='bench_sort-genzipf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-genzipf.obj `if test -f '$(top_srcdir)/src/datagen/genzipf.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/genzipf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/genzipf.c'; fi`

bench_sort-generator.o: $(top_srcdir)/src/datagen/generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-generator.o -MD -MP -MF $(DEPDIR)/bench_sort-generator.Tpo -c -o bench_sort-generator.o `test -f '$(top_srcdir)/src/datagen/generator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/generator.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-generator.Tpo $(DEPDIR)/bench_sort-generator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/generator.c' object='bench_sort-generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-generator.o `test -f '$(top_srcdir)/src/datagen/generator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/generator.c

bench_sort-generator.obj: $(top_srcdir)/src/datagen/generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-generator.obj -MD -MP -MF $(DEPDIR)/bench_sort-generator.Tpo -c -o bench_sort-generator.obj `if test -f '$(top_srcdir)/src/datagen/generator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/generator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/generator.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-generator.Tpo $(DEPDIR)/bench_sort-generator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/generator.c' object='bench_sort-generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-generator.obj `if test -f '$(top_srcdir)/src/datagen/generator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/generator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/generator.c'; fi`

bench_sort-sortbench.o: $(top_srcdir)/src/bench/sortbench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-sortbench.o -MD -MP -MF $(DEPDIR)/bench_sort-sortbench.Tpo -c -o bench_sort-sortbench.o `test -f '$(top_srcdir)/src/bench/sortbench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/sortbench.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-sortbench.Tpo $(DEPDIR)/bench_sort-sortbench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/sortbench.c' object='bench_sort-sortbench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-sortbench.o `test -f '$(top_srcdir)/src/bench/sortbench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/sortbench.c

bench_sort-sortbench.obj: $(top_srcdir)/src/bench/sortbench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -MT bench_sort-sortbench.obj -MD -MP -MF $(DEPDIR)/bench_sort-sortbench.Tpo -c -o bench_sort-sortbench.obj `if test -f '$(top_srcdir)/src/bench/sortbench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/sortbench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/sortbench.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bench_sort-sortbench.Tpo $(DEPDIR)/bench_sort-sortbench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/sortbench.c' object='bench_sort-sortbench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bench_sort_CFLAGS) $(CFLAGS) -c -o bench_sort-sortbench.obj `if test -f '$(top_srcdir)/src/bench/sortbench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/sortbench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/sortbench.c'; fi`

sortmergejoins-perf_counters.o: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-perf_counters.o -MD -MP -MF $(DEPDIR)/sortmergejoins-perf_counters.Tpo -c -o sortmergejoins-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-perf_counters.Tpo $(DEPDIR)/sortmergejoins-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='sortmergejoins-perf_counters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c

sortmergejoins-perf_counters.obj: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-perf_counters.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-perf_counters.Tpo -c -o sortmergejoins-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-perf_counters.Tpo $(DEPDIR)/sortmergejoins-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='sortmergejoins-perf_counters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`

sortmergejoins-cpu_mapping.o: $(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-cpu_mapping.o -MD -MP -MF $(DEPDIR)/sortmergejoins-cpu_mapping.Tpo -c -o sortmergejoins-cpu_mapping.o `test -f '$(top_srcdir)/src/util/cpu_mapping.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-cpu_mapping.Tpo $(DEPDIR)/sortmergejoins-cpu_mapping.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/cpu_mapping.c' object='sortmergejoins-cpu_mapping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-cpu_mapping.o `test -f '$(top_srcdir)/src/util/cpu_mapping.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/cpu_mapping.c

sortmergejoins-cpu_mapping.obj: $(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-cpu_mapping.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-cpu_mapping.Tpo -c -o sortmergejoins-cpu_mapping.obj `if test -f '$(top_srcdir)/src/util/cpu_mapping.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/cpu_mapping.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/cpu_mapping.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-cpu_mapping.Tpo $(DEPDIR)/sortmergejoins-cpu_mapping.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/cpu_mapping.c' object='sortmergejoins-cpu_mapping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-cpu_mapping.obj `if test -f '$(top_srcdir)/src/util/cpu_mapping.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/cpu_mapping.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/cpu_mapping.c'; fi`

sortmergejoins-numa_shuffle.o: $(top_srcdir)/src/util/numa_shuffle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-numa_shuffle.o -MD -MP -MF $(DEPDIR)/sortmergejoins-numa_shuffle.Tpo -c -o sortmergejoins-numa_shuffle.o `test -f '$(top_srcdir)/src/util/numa_shuffle.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/numa_shuffle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-numa_shuffle.Tpo $(DEPDIR)/sortmergejoins-numa_shuffle.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/numa_shuffle.c' object='sortmergejoins-numa_shuffle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-numa_shuffle.o `test -f '$(top_srcdir)/src/util/numa_shuffle.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/numa_shuffle.c

sortmergejoins-numa_shuffle.obj: $(top_srcdir)/src/util/numa_shuffle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-numa_shuffle.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-numa_shuffle.Tpo -c -o sortmergejoins-numa_shuffle.obj `if test -f '$(top_srcdir)/src/util/numa_shuffle.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/numa_shuffle.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/numa_shuffle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-numa_shuffle.Tpo $(DEPDIR)/sortmergejoins-numa_shuffle.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/numa_shuffle.c' object='sortmergejoins-numa_shuffle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-numa_shuffle.obj `if test -f '$(top_srcdir)/src/util/numa_shuffle.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/numa_shuffle.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/numa_shuffle.c'; fi`

sortmergejoins-memalloc.o: $(top_srcdir)/src/util/memalloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-memalloc.o -MD -MP -MF $(DEPDIR)/sortmergejoins-memalloc.Tpo -c -o sortmergejoins-memalloc.o `test -f '$(top_srcdir)/src/util/memalloc.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/memalloc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-memalloc.Tpo $(DEPDIR)/sortmergejoins-memalloc.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/memalloc.c' object='sortmergejoins-memalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-memalloc.o `test -f '$(top_srcdir)/src/util/memalloc.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/memalloc.c

sortmergejoins-memalloc.obj: $(top_srcdir)/src/util/memalloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-memalloc.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-memalloc.Tpo -c -o sortmergejoins-memalloc.obj `if test -f '$(top_srcdir)/src/util/memalloc.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/memalloc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/memalloc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-memalloc.Tpo $(DEPDIR)/sortmergejoins-memalloc.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/memalloc.c' object='sortmergejoins-memalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-memalloc.obj `if test -f '$(top_srcdir)/src/util/memalloc.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/memalloc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/memalloc.c'; fi`

sortmergejoins-avxsort.o: $(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-avxsort.o -MD -MP -MF $(DEPDIR)/sortmergejoins-avxsort.Tpo -c -o sortmergejoins-avxsort.o `test -f '$(top_srcdir)/src/avxsort/avxsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-avxsort.Tpo $(DEPDIR)/sortmergejoins-avxsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/avxsort/avxsort.c' object='sortmergejoins-avxsort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-avxsort.o `test -f '$(top_srcdir)/src/avxsort/avxsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/avxsort/avxsort.c

sortmergejoins-avxsort.obj: $(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-avxsort.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-avxsort.Tpo -c -o sortmergejoins-avxsort.obj `if test -f '$(top_srcdir)/src/avxsort/avxsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/avxsort/avxsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/avxsort/avxsort.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-avxsort.Tpo $(DEPDIR)/sortmergejoins-avxsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/avxsort/avxsort.c' object='sortmergejoins-avxsort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-avxsort.obj `if test -f '$(top_srcdir)/src/avxsort/avxsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/avxsort/avxsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/avxsort/avxsort.c'; fi`

sortmergejoins-merge.o: $(top_srcdir)/src/merge/merge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-merge.o -MD -MP -MF $(DEPDIR)/sortmergejoins-merge.Tpo -c -o sortmergejoins-merge.o `test -f '$(top_srcdir)/src/merge/merge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/merge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-merge.Tpo $(DEPDIR)/sortmergejoins-merge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/merge.c' object='sortmergejoins-merge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-merge.o `test -f '$(top_srcdir)/src/merge/merge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/merge.c

sortmergejoins-merge.obj: $(top_srcdir)/src/merge/merge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-merge.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-merge.Tpo -c -o sortmergejoins-merge.obj `if test -f '$(top_srcdir)/src/merge/merge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/merge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/merge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-merge.Tpo $(DEPDIR)/sortmergejoins-merge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/merge.c' object='sortmergejoins-merge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-merge.obj `if test -f '$(top_srcdir)/src/merge/merge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/merge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/merge.c'; fi`

sortmergejoins-scalarsort.o: $(top_srcdir)/src/scalarsort/scalarsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-scalarsort.o -MD -MP -MF $(DEPDIR)/sortmergejoins-scalarsort.Tpo -c -o sortmergejoins-scalarsort.o `test -f '$(top_srcdir)/src/scalarsort/scalarsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/scalarsort/scalarsort.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-scalarsort.Tpo $(DEPDIR)/sortmergejoins-scalarsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/scalarsort/scalarsort.c' object='sortmergejoins-scalarsort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-scalarsort.o `test -f '$(top_srcdir)/src/scalarsort/scalarsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/scalarsort/scalarsort.c

sortmergejoins-scalarsort.obj: $(top_srcdir)/src/scalarsort/scalarsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-scalarsort.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-scalarsort.Tpo -c -o sortmergejoins-scalarsort.obj `if test -f '$(top_srcdir)/src/scalarsort/scalarsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/scalarsort/scalarsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/scalarsort/scalarsort.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-scalarsort.Tpo $(DEPDIR)/sortmergejoins-scalarsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/scalarsort/scalarsort.c' object='sortmergejoins-scalarsort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-scalarsort.obj `if test -f '$(top_srcdir)/src/scalarsort/scalarsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/scalarsort/scalarsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/scalarsort/scalarsort.c'; fi`

sortmergejoins-genzipf.o: $(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-genzipf.o -MD -MP -MF $(DEPDIR)/sortmergejoins-genzipf.Tpo -c -o sortmergejoins-genzipf.o `test -f '$(top_srcdir)/src/datagen/genzipf.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-genzipf.Tpo $(DEPDIR)/sortmergejoins-genzipf.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/genzipf.c' object='sortmergejoins-genzipf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-genzipf.o `test -f '$(top_srcdir)/src/datagen/genzipf.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/genzipf.c

sortmergejoins-genzipf.obj: $(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-genzipf.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-genzipf.Tpo -c -o sortmergejoins-genzipf.obj `if test -f '$(top_srcdir)/src/datagen/genzipf.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/genzipf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/genzipf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-genzipf.Tpo $(DEPDIR)/sortmergejoins-genzipf.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/genzipf.c' object='sortmergejoins-genzipf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-genzipf.obj `if test -f '$(top_srcdir)/src/datagen/genzipf.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/genzipf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/genzipf.c'; fi`

sortmergejoins-generator.o: $(top_srcdir)/src/datagen/generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-generator.o -MD -MP -MF $(DEPDIR)/sortmergejoins-generator.Tpo -c -o sortmergejoins-generator.o `test -f '$(top_srcdir)/src/datagen/generator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/generator.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-generator.Tpo $(DEPDIR)/sortmergejoins-generator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/generator.c' object='sortmergejoins-generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-generator.o `test -f '$(top_srcdir)/src/datagen/generator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/generator.c

sortmergejoins-generator.obj: $(top_srcdir)/src/datagen/generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-generator.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-generator.Tpo -c -o sortmergejoins-generator.obj `if test -f '$(top_srcdir)/src/datagen/generator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/generator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/generator.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-generator.Tpo $(DEPDIR)/sortmergejoins-generator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/generator.c' object='sortmergejoins-generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-generator.obj `if test -f '$(top_srcdir)/src/datagen/generator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/generator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/generator.c'; fi`

sortmergejoins-partition.o: $(top_srcdir)/src/partition/partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-partition.o -MD -MP -MF $(DEPDIR)/sortmergejoins-partition.Tpo -c -o sortmergejoins-partition.o `test -f '$(top_srcdir)/src/partition/partition.c' || echo '$(srcdir)/'`$(top_srcdir)/src/partition/partition.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-partition.Tpo $(DEPDIR)/sortmergejoins-partition.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/partition/partition.c' object='sortmergejoins-partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-partition.o `test -f '$(top_srcdir)/src/partition/partition.c' || echo '$(srcdir)/'`$(top_srcdir)/src/partition/partition.c

sortmergejoins-partition.obj: $(top_srcdir)/src/partition/partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-partition.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-partition.Tpo -c -o sortmergejoins-partition.obj `if test -f '$(top_srcdir)/src/partition/partition.c'; then $(CYGPATH_W) '$(top_srcdir)/src/partition/partition.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/partition/partition.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-partition.Tpo $(DEPDIR)/sortmergejoins-partition.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/partition/partition.c' object='sortmergejoins-partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-partition.obj `if test -f '$(top_srcdir)/src/partition/partition.c'; then $(CYGPATH_W) '$(top_srcdir)/src/partition/partition.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/partition/partition.c'; fi`

sortmergejoins-joincommon.o: $(top_srcdir)/src/joins/joincommon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-joincommon.o -MD -MP -MF $(DEPDIR)/sortmergejoins-joincommon.Tpo -c -o sortmergejoins-joincommon.o `test -f '$(top_srcdir)/src/joins/joincommon.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/joincommon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-joincommon.Tpo $(DEPDIR)/sortmergejoins-joincommon.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/joincommon.c' object='sortmergejoins-joincommon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-joincommon.o `test -f '$(top_srcdir)/src/joins/joincommon.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/joincommon.c

sortmergejoins-joincommon.obj: $(top_srcdir)/src/joins/joincommon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-joincommon.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-joincommon.Tpo -c -o sortmergejoins-joincommon.obj `if test -f '$(top_srcdir)/src/joins/joincommon.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/joincommon.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/joincommon.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-joincommon.Tpo $(DEPDIR)/sortmergejoins-joincommon.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/joincommon.c' object='sortmergejoins-joincommon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-joincommon.obj `if test -f '$(top_srcdir)/src/joins/joincommon.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/joincommon.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/joincommon.c'; fi`

sortmergejoins-sortmergejoin_multipass.o: $(top_srcdir)/src/joins/sortmergejoin_multipass.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-sortmergejoin_multipass.o -MD -MP -MF $(DEPDIR)/sortmergejoins-sortmergejoin_multipass.Tpo -c -o sortmergejoins-sortmergejoin_multipass.o `test -f '$(top_srcdir)/src/joins/sortmergejoin_multipass.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/sortmergejoin_multipass.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-sortmergejoin_multipass.Tpo $(DEPDIR)/sortmergejoins-sortmergejoin_multipass.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/sortmergejoin_multipass.c' object='sortmergejoins-sortmergejoin_multipass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-sortmergejoin_multipass.o `test -f '$(top_srcdir)/src/joins/sortmergejoin_multipass.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/sortmergejoin_multipass.c

sortmergejoins-sortmergejoin_multipass.obj: $(top_srcdir)/src/joins/sortmergejoin_multipass.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-sortmergejoin_multipass.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-sortmergejoin_multipass.Tpo -c -o sortmergejoins-sortmergejoin_multipass.obj `if test -f '$(top_srcdir)/src/joins/sortmergejoin_multipass.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/sortmergejoin_multipass.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/sortmergejoin_multipass.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-sortmergejoin_multipass.Tpo $(DEPDIR)/sortmergejoins-sortmergejoin_multipass.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/sortmergejoin_multipass.c' object='sortmergejoins-sortmergejoin_multipass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-sortmergejoin_multipass.obj `if test -f '$(top_srcdir)/src/joins/sortmergejoin_multipass.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/sortmergejoin_multipass.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/sortmergejoin_multipass.c'; fi`

sortmergejoins-scalar_multiwaymerge.o: $(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-scalar_multiwaymerge.o -MD -MP -MF $(DEPDIR)/sortmergejoins-scalar_multiwaymerge.Tpo -c -o sortmergejoins-scalar_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-scalar_multiwaymerge.Tpo $(DEPDIR)/sortmergejoins-scalar_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/scalar_multiwaymerge.c' object='sortmergejoins-scalar_multiwaymerge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-scalar_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/scalar_multiwaymerge.c

sortmergejoins-scalar_multiwaymerge.obj: $(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-scalar_multiwaymerge.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-scalar_multiwaymerge.Tpo -c -o sortmergejoins-scalar_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-scalar_multiwaymerge.Tpo $(DEPDIR)/sortmergejoins-scalar_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/scalar_multiwaymerge.c' object='sortmergejoins-scalar_multiwaymerge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-scalar_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; fi`

sortmergejoins-avx_multiwaymerge.o: $(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-avx_multiwaymerge.o -MD -MP -MF $(DEPDIR)/sortmergejoins-avx_multiwaymerge.Tpo -c -o sortmergejoins-avx_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-avx_multiwaymerge.Tpo $(DEPDIR)/sortmergejoins-avx_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/avx_multiwaymerge.c' object='sortmergejoins-avx_multiwaymerge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-avx_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/avx_multiwaymerge.c

sortmergejoins-avx_multiwaymerge.obj: $(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-avx_multiwaymerge.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-avx_multiwaymerge.Tpo -c -o sortmergejoins-avx_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/avx_multiwaymerge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-avx_multiwaymerge.Tpo $(DEPDIR)/sortmergejoins-avx_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/avx_multiwaymerge.c' object='sortmergejoins-avx_multiwaymerge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-avx_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/avx_multiwaymerge.c'; fi`

sortmergejoins-sortmergejoin_multiway.o: $(top_srcdir)/src/joins/sortmergejoin_multiway.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-sortmergejoin_multiway.o -MD -MP -MF $(DEPDIR)/sortmergejoins-sortmergejoin_multiway.Tpo -c -o sortmergejoins-sortmergejoin_multiway.o `test -f '$(top_srcdir)/src/joins/sortmergejoin_multiway.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/sortmergejoin_multiway.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-sortmergejoin_multiway.Tpo $(DEPDIR)/sortmergejoins-sortmergejoin_multiway.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/sortmergejoin_multiway.c' object='sortmergejoins-sortmergejoin_multiway.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-sortmergejoin_multiway.o `test -f '$(top_srcdir)/src/joins/sortmergejoin_multiway.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/sortmergejoin_multiway.c

sortmergejoins-sortmergejoin_multiway.obj: $(top_srcdir)/src/joins/sortmergejoin_multiway.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-sortmergejoin_multiway.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-sortmergejoin_multiway.Tpo -c -o sortmergejoins-sortmergejoin_multiway.obj `if test -f '$(top_srcdir)/src/joins/sortmergejoin_multiway.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/sortmergejoin_multiway.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/sortmergejoin_multiway.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-sortmergejoin_multiway.Tpo $(DEPDIR)/sortmergejoins-sortmergejoin_multiway.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/sortmergejoin_multiway.c' object='sortmergejoins-sortmergejoin_multiway.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-sortmergejoin_multiway.obj `if test -f '$(top_srcdir)/src/joins/sortmergejoin_multiway.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/sortmergejoin_multiway.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/sortmergejoin_multiway.c'; fi`

sortmergejoins-sortmergejoin_mpsm.o: $(top_srcdir)/src/joins/sortmergejoin_mpsm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-sortmergejoin_mpsm.o -MD -MP -MF $(DEPDIR)/sortmergejoins-sortmergejoin_mpsm.Tpo -c -o sortmergejoins-sortmergejoin_mpsm.o `test -f '$(top_srcdir)/src/joins/sortmergejoin_mpsm.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/sortmergejoin_mpsm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-sortmergejoin_mpsm.Tpo $(DEPDIR)/sortmergejoins-sortmergejoin_mpsm.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/sortmergejoin_mpsm.c' object='sortmergejoins-sortmergejoin_mpsm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-sortmergejoin_mpsm.o `test -f '$(top_srcdir)/src/joins/sortmergejoin_mpsm.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/sortmergejoin_mpsm.c

sortmergejoins-sortmergejoin_mpsm.obj: $(top_srcdir)/src/joins/sortmergejoin_mpsm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-sortmergejoin_mpsm.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-sortmergejoin_mpsm.Tpo -c -o sortmergejoins-sortmergejoin_mpsm.obj `if test -f '$(top_srcdir)/src/joins/sortmergejoin_mpsm.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/sortmergejoin_mpsm.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/sortmergejoin_mpsm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-sortmergejoin_mpsm.Tpo $(DEPDIR)/sortmergejoins-sortmergejoin_mpsm.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/sortmergejoin_mpsm.c' object='sortmergejoins-sortmergejoin_mpsm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-sortmergejoin_mpsm.obj `if test -f '$(top_srcdir)/src/joins/sortmergejoin_mpsm.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/sortmergejoin_mpsm.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/sortmergejoin_mpsm.c'; fi`

sortmergejoins-main.o: $(top_srcdir)/src/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-main.o -MD -MP -MF $(DEPDIR)/sortmergejoins-main.Tpo -c -o sortmergejoins-main.o `test -f '$(top_srcdir)/src/main.c' || echo '$(srcdir)/'`$(top_srcdir)/src/main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-main.Tpo $(DEPDIR)/sortmergejoins-main.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/main.c' object='sortmergejoins-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-main.o `test -f '$(top_srcdir)/src/main.c' || echo '$(srcdir)/'`$(top_srcdir)/src/main.c

sortmergejoins-main.obj: $(top_srcdir)/src/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -MT sortmergejoins-main.obj -MD -MP -MF $(DEPDIR)/sortmergejoins-main.Tpo -c -o sortmergejoins-main.obj `if test -f '$(top_srcdir)/src/main.c'; then $(CYGPATH_W) '$(top_srcdir)/src/main.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/main.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sortmergejoins-main.Tpo $(DEPDIR)/sortmergejoins-main.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/main.c' object='sortmergejoins-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sortmergejoins_CFLAGS) $(CFLAGS) -c -o sortmergejoins-main.obj `if test -f '$(top_srcdir)/src/main.c'; then $(CYGPATH_W) '$(top_srcdir)/src/main.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/main.c'; fi`

tputbench-perf_counters.o: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-perf_counters.o -MD -MP -MF $(DEPDIR)/tputbench-perf_counters.Tpo -c -o tputbench-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-perf_counters.Tpo $(DEPDIR)/tputbench-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='tputbench-perf_counters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-perf_counters.o `test -f '$(top_srcdir)/src/util/perf_counters.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/perf_counters.c

tputbench-perf_counters.obj: $(top_srcdir)/src/util/perf_counters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-perf_counters.obj -MD -MP -MF $(DEPDIR)/tputbench-perf_counters.Tpo -c -o tputbench-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-perf_counters.Tpo $(DEPDIR)/tputbench-perf_counters.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/perf_counters.c' object='tputbench-perf_counters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-perf_counters.obj `if test -f '$(top_srcdir)/src/util/perf_counters.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/perf_counters.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/perf_counters.c'; fi`

tputbench-cpu_mapping.o: $(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-cpu_mapping.o -MD -MP -MF $(DEPDIR)/tputbench-cpu_mapping.Tpo -c -o tputbench-cpu_mapping.o `test -f '$(top_srcdir)/src/util/cpu_mapping.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-cpu_mapping.Tpo $(DEPDIR)/tputbench-cpu_mapping.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/cpu_mapping.c' object='tputbench-cpu_mapping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-cpu_mapping.o `test -f '$(top_srcdir)/src/util/cpu_mapping.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/cpu_mapping.c

tputbench-cpu_mapping.obj: $(top_srcdir)/src/util/cpu_mapping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-cpu_mapping.obj -MD -MP -MF $(DEPDIR)/tputbench-cpu_mapping.Tpo -c -o tputbench-cpu_mapping.obj `if test -f '$(top_srcdir)/src/util/cpu_mapping.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/cpu_mapping.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/cpu_mapping.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-cpu_mapping.Tpo $(DEPDIR)/tputbench-cpu_mapping.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/cpu_mapping.c' object='tputbench-cpu_mapping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-cpu_mapping.obj `if test -f '$(top_srcdir)/src/util/cpu_mapping.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/cpu_mapping.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/cpu_mapping.c'; fi`

tputbench-memalloc.o: $(top_srcdir)/src/util/memalloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-memalloc.o -MD -MP -MF $(DEPDIR)/tputbench-memalloc.Tpo -c -o tputbench-memalloc.o `test -f '$(top_srcdir)/src/util/memalloc.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/memalloc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-memalloc.Tpo $(DEPDIR)/tputbench-memalloc.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/memalloc.c' object='tputbench-memalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-memalloc.o `test -f '$(top_srcdir)/src/util/memalloc.c' || echo '$(srcdir)/'`$(top_srcdir)/src/util/memalloc.c

tputbench-memalloc.obj: $(top_srcdir)/src/util/memalloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-memalloc.obj -MD -MP -MF $(DEPDIR)/tputbench-memalloc.Tpo -c -o tputbench-memalloc.obj `if test -f '$(top_srcdir)/src/util/memalloc.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/memalloc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/memalloc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-memalloc.Tpo $(DEPDIR)/tputbench-memalloc.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/util/memalloc.c' object='tputbench-memalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-memalloc.obj `if test -f '$(top_srcdir)/src/util/memalloc.c'; then $(CYGPATH_W) '$(top_srcdir)/src/util/memalloc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/util/memalloc.c'; fi`

tputbench-avxsort.o: $(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-avxsort.o -MD -MP -MF $(DEPDIR)/tputbench-avxsort.Tpo -c -o tputbench-avxsort.o `test -f '$(top_srcdir)/src/avxsort/avxsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-avxsort.Tpo $(DEPDIR)/tputbench-avxsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/avxsort/avxsort.c' object='tputbench-avxsort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-avxsort.o `test -f '$(top_srcdir)/src/avxsort/avxsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/avxsort/avxsort.c

tputbench-avxsort.obj: $(top_srcdir)/src/avxsort/avxsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-avxsort.obj -MD -MP -MF $(DEPDIR)/tputbench-avxsort.Tpo -c -o tputbench-avxsort.obj `if test -f '$(top_srcdir)/src/avxsort/avxsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/avxsort/avxsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/avxsort/avxsort.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-avxsort.Tpo $(DEPDIR)/tputbench-avxsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/avxsort/avxsort.c' object='tputbench-avxsort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-avxsort.obj `if test -f '$(top_srcdir)/src/avxsort/avxsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/avxsort/avxsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/avxsort/avxsort.c'; fi`

tputbench-merge.o: $(top_srcdir)/src/merge/merge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-merge.o -MD -MP -MF $(DEPDIR)/tputbench-merge.Tpo -c -o tputbench-merge.o `test -f '$(top_srcdir)/src/merge/merge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/merge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-merge.Tpo $(DEPDIR)/tputbench-merge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/merge.c' object='tputbench-merge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-merge.o `test -f '$(top_srcdir)/src/merge/merge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/merge.c

tputbench-merge.obj: $(top_srcdir)/src/merge/merge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-merge.obj -MD -MP -MF $(DEPDIR)/tputbench-merge.Tpo -c -o tputbench-merge.obj `if test -f '$(top_srcdir)/src/merge/merge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/merge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/merge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-merge.Tpo $(DEPDIR)/tputbench-merge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/merge.c' object='tputbench-merge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-merge.obj `if test -f '$(top_srcdir)/src/merge/merge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/merge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/merge.c'; fi`

tputbench-scalarsort.o: $(top_srcdir)/src/scalarsort/scalarsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-scalarsort.o -MD -MP -MF $(DEPDIR)/tputbench-scalarsort.Tpo -c -o tputbench-scalarsort.o `test -f '$(top_srcdir)/src/scalarsort/scalarsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/scalarsort/scalarsort.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-scalarsort.Tpo $(DEPDIR)/tputbench-scalarsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/scalarsort/scalarsort.c' object='tputbench-scalarsort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-scalarsort.o `test -f '$(top_srcdir)/src/scalarsort/scalarsort.c' || echo '$(srcdir)/'`$(top_srcdir)/src/scalarsort/scalarsort.c

tputbench-scalarsort.obj: $(top_srcdir)/src/scalarsort/scalarsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-scalarsort.obj -MD -MP -MF $(DEPDIR)/tputbench-scalarsort.Tpo -c -o tputbench-scalarsort.obj `if test -f '$(top_srcdir)/src/scalarsort/scalarsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/scalarsort/scalarsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/scalarsort/scalarsort.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-scalarsort.Tpo $(DEPDIR)/tputbench-scalarsort.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/scalarsort/scalarsort.c' object='tputbench-scalarsort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-scalarsort.obj `if test -f '$(top_srcdir)/src/scalarsort/scalarsort.c'; then $(CYGPATH_W) '$(top_srcdir)/src/scalarsort/scalarsort.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/scalarsort/scalarsort.c'; fi`

tputbench-genzipf.o: $(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-genzipf.o -MD -MP -MF $(DEPDIR)/tputbench-genzipf.Tpo -c -o tputbench-genzipf.o `test -f '$(top_srcdir)/src/datagen/genzipf.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-genzipf.Tpo $(DEPDIR)/tputbench-genzipf.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/genzipf.c' object='tputbench-genzipf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-genzipf.o `test -f '$(top_srcdir)/src/datagen/genzipf.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/genzipf.c

tputbench-genzipf.obj: $(top_srcdir)/src/datagen/genzipf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-genzipf.obj -MD -MP -MF $(DEPDIR)/tputbench-genzipf.Tpo -c -o tputbench-genzipf.obj `if test -f '$(top_srcdir)/src/datagen/genzipf.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/genzipf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/genzipf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-genzipf.Tpo $(DEPDIR)/tputbench-genzipf.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/genzipf.c' object='tputbench-genzipf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-genzipf.obj `if test -f '$(top_srcdir)/src/datagen/genzipf.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/genzipf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/genzipf.c'; fi`

tputbench-generator.o: $(top_srcdir)/src/datagen/generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-generator.o -MD -MP -MF $(DEPDIR)/tputbench-generator.Tpo -c -o tputbench-generator.o `test -f '$(top_srcdir)/src/datagen/generator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/generator.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-generator.Tpo $(DEPDIR)/tputbench-generator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/generator.c' object='tputbench-generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-generator.o `test -f '$(top_srcdir)/src/datagen/generator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/datagen/generator.c

tputbench-generator.obj: $(top_srcdir)/src/datagen/generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-generator.obj -MD -MP -MF $(DEPDIR)/tputbench-generator.Tpo -c -o tputbench-generator.obj `if test -f '$(top_srcdir)/src/datagen/generator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/generator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/generator.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-generator.Tpo $(DEPDIR)/tputbench-generator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/datagen/generator.c' object='tputbench-generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-generator.obj `if test -f '$(top_srcdir)/src/datagen/generator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/datagen/generator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/datagen/generator.c'; fi`

tputbench-partition.o: $(top_srcdir)/src/partition/partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-partition.o -MD -MP -MF $(DEPDIR)/tputbench-partition.Tpo -c -o tputbench-partition.o `test -f '$(top_srcdir)/src/partition/partition.c' || echo '$(srcdir)/'`$(top_srcdir)/src/partition/partition.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-partition.Tpo $(DEPDIR)/tputbench-partition.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/partition/partition.c' object='tputbench-partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-partition.o `test -f '$(top_srcdir)/src/partition/partition.c' || echo '$(srcdir)/'`$(top_srcdir)/src/partition/partition.c

tputbench-partition.obj: $(top_srcdir)/src/partition/partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-partition.obj -MD -MP -MF $(DEPDIR)/tputbench-partition.Tpo -c -o tputbench-partition.obj `if test -f '$(top_srcdir)/src/partition/partition.c'; then $(CYGPATH_W) '$(top_srcdir)/src/partition/partition.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/partition/partition.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-partition.Tpo $(DEPDIR)/tputbench-partition.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/partition/partition.c' object='tputbench-partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-partition.obj `if test -f '$(top_srcdir)/src/partition/partition.c'; then $(CYGPATH_W) '$(top_srcdir)/src/partition/partition.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/partition/partition.c'; fi`

tputbench-joincommon.o: $(top_srcdir)/src/joins/joincommon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-joincommon.o -MD -MP -MF $(DEPDIR)/tputbench-joincommon.Tpo -c -o tputbench-joincommon.o `test -f '$(top_srcdir)/src/joins/joincommon.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/joincommon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-joincommon.Tpo $(DEPDIR)/tputbench-joincommon.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/joincommon.c' object='tputbench-joincommon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-joincommon.o `test -f '$(top_srcdir)/src/joins/joincommon.c' || echo '$(srcdir)/'`$(top_srcdir)/src/joins/joincommon.c

tputbench-joincommon.obj: $(top_srcdir)/src/joins/joincommon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-joincommon.obj -MD -MP -MF $(DEPDIR)/tputbench-joincommon.Tpo -c -o tputbench-joincommon.obj `if test -f '$(top_srcdir)/src/joins/joincommon.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/joincommon.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/joincommon.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-joincommon.Tpo $(DEPDIR)/tputbench-joincommon.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/joins/joincommon.c' object='tputbench-joincommon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-joincommon.obj `if test -f '$(top_srcdir)/src/joins/joincommon.c'; then $(CYGPATH_W) '$(top_srcdir)/src/joins/joincommon.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/joins/joincommon.c'; fi`

tputbench-scalar_multiwaymerge.o: $(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-scalar_multiwaymerge.o -MD -MP -MF $(DEPDIR)/tputbench-scalar_multiwaymerge.Tpo -c -o tputbench-scalar_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-scalar_multiwaymerge.Tpo $(DEPDIR)/tputbench-scalar_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/scalar_multiwaymerge.c' object='tputbench-scalar_multiwaymerge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-scalar_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/scalar_multiwaymerge.c

tputbench-scalar_multiwaymerge.obj: $(top_srcdir)/src/merge/scalar_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-scalar_multiwaymerge.obj -MD -MP -MF $(DEPDIR)/tputbench-scalar_multiwaymerge.Tpo -c -o tputbench-scalar_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-scalar_multiwaymerge.Tpo $(DEPDIR)/tputbench-scalar_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/scalar_multiwaymerge.c' object='tputbench-scalar_multiwaymerge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-scalar_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/scalar_multiwaymerge.c'; fi`

tputbench-avx_multiwaymerge.o: $(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-avx_multiwaymerge.o -MD -MP -MF $(DEPDIR)/tputbench-avx_multiwaymerge.Tpo -c -o tputbench-avx_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-avx_multiwaymerge.Tpo $(DEPDIR)/tputbench-avx_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/avx_multiwaymerge.c' object='tputbench-avx_multiwaymerge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-avx_multiwaymerge.o `test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c' || echo '$(srcdir)/'`$(top_srcdir)/src/merge/avx_multiwaymerge.c

tputbench-avx_multiwaymerge.obj: $(top_srcdir)/src/merge/avx_multiwaymerge.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-avx_multiwaymerge.obj -MD -MP -MF $(DEPDIR)/tputbench-avx_multiwaymerge.Tpo -c -o tputbench-avx_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/avx_multiwaymerge.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-avx_multiwaymerge.Tpo $(DEPDIR)/tputbench-avx_multiwaymerge.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/merge/avx_multiwaymerge.c' object='tputbench-avx_multiwaymerge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-avx_multiwaymerge.obj `if test -f '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; then $(CYGPATH_W) '$(top_srcdir)/src/merge/avx_multiwaymerge.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/merge/avx_multiwaymerge.c'; fi`

tputbench-tputbench.o: $(top_srcdir)/src/bench/tputbench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-tputbench.o -MD -MP -MF $(DEPDIR)/tputbench-tputbench.Tpo -c -o tputbench-tputbench.o `test -f '$(top_srcdir)/src/bench/tputbench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/tputbench.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-tputbench.Tpo $(DEPDIR)/tputbench-tputbench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/tputbench.c' object='tputbench-tputbench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-tputbench.o `test -f '$(top_srcdir)/src/bench/tputbench.c' || echo '$(srcdir)/'`$(top_srcdir)/src/bench/tputbench.c

tputbench-tputbench.obj: $(top_srcdir)/src/bench/tputbench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -MT tputbench-tputbench.obj -MD -MP -MF $(DEPDIR)/tputbench-tputbench.Tpo -c -o tputbench-tputbench.obj `if test -f '$(top_srcdir)/src/bench/tputbench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/tputbench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/tputbench.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tputbench-tputbench.Tpo $(DEPDIR)/tputbench-tputbench.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/bench/tputbench.c' object='tputbench-tputbench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tputbench_CFLAGS) $(CFLAGS) -c -o tputbench-tputbench.obj `if test -f '$(top_srcdir)/src/bench/tputbench.c'; then $(CYGPATH_W) '$(top_srcdir)/src/bench/tputbench.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/bench/tputbench.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
